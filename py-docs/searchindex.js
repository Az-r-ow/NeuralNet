Search.setIndex({"docnames": ["NeuralNetPy", "index", "quick-start", "submodules/callbacks", "submodules/layers", "submodules/models", "submodules/optimizers"], "filenames": ["NeuralNetPy.rst", "index.rst", "quick-start.rst", "submodules/callbacks.rst", "submodules/layers.rst", "submodules/models.rst", "submodules/optimizers.rst"], "titles": ["NeuralNetPy", "Welcome to NeuralNetPy\u2019s documentation!", "Quick Start", "Callbacks", "Layers", "Models", "Optimizers"], "terms": {"callback": [0, 1, 5], "csvlogger": [0, 1, 3], "earlystop": [0, 1, 3], "optim": [0, 1, 2, 5], "adam": [0, 1, 2, 6], "sgd": [0, 1, 5, 6], "layer": [0, 1, 2, 5], "dens": [0, 1, 2, 4, 5], "flatten": [0, 1, 2, 4, 5], "model": [0, 1, 2, 3], "load_from_fil": [0, 2, 5], "save_to_fil": [0, 2, 5], "addlay": [0, 2, 5], "getlay": [0, 5], "getnumlay": [0, 5], "predict": [0, 2, 5], "setup": [0, 2, 5], "train": [0, 2, 3, 5], "class": [0, 3, 4, 5, 6], "activ": [0, 1, 2, 4, 5], "base": [0, 3, 4, 5, 6], "pybind11_object": [0, 3, 5], "member": 0, "relu": [0, 2, 4, 5], "rectifi": 0, "function": [0, 3, 4, 5, 6], "sigmoid": [0, 4, 5], "softmax": [0, 2], "0": [0, 2, 3, 4, 5, 6], "1": [0, 5], "2": [0, 5], "properti": 0, "name": 0, "valu": 0, "loss": [0, 1, 2, 3, 5, 6], "quadrat": [0, 5], "mce": [0, 2], "trainingdata2di": [0, 1, 5], "batch": [0, 2], "self": [0, 5], "batchsiz": 0, "int": [0, 3, 4, 5], "none": [0, 5], "thi": [0, 3, 4, 5], "method": [0, 3, 4, 6], "separ": 0, "input": [0, 2, 3, 4, 5], "label": [0, 3, 5], "data": [0, 2], "specifi": 0, "size": 0, "trainingdata3di": [0, 1, 2, 5], "weight_init": [0, 1, 2, 4, 5], "random": [0, 4], "initi": [0, 2, 3, 4, 5], "weight": [0, 4, 6], "glorot": 0, "best": 0, "when": 0, "combin": 0, "he": [0, 2, 4, 5], "lecun": [0, 2], "3": [0, 4, 5], "quick": 1, "start": 1, "instal": 1, "network": [1, 2, 3, 4, 5, 6], "neural": [1, 2, 4, 5, 6], "librari": [1, 2], "index": [1, 5], "search": 1, "page": 1, "requir": 2, "docker": 2, "build": [2, 4], "python": 2, "imag": [2, 4], "compos": 2, "up": 2, "we": 2, "re": [2, 5], "assum": 2, "you": [2, 3, 5], "run": 2, "command": 2, "from": [2, 5], "root": 2, "project": 2, "access": 2, "servic": 2, "which": [2, 3, 4], "act": 2, "your": 2, "work": 2, "environ": 2, "exampl": [2, 3, 4, 5], "To": 2, "know": 2, "should": [2, 5], "see": 2, "chang": [2, 3, 6], "cli": 2, "": [2, 3, 5], "prompt": 2, "ad245b0ff5c4": 2, "app": 2, "now": 2, "all": [2, 3, 5], "have": 2, "do": [2, 5], "i": [2, 3, 4, 5], "navig": 2, "like": [2, 4], "script": 2, "just": 2, "would": 2, "normal": 2, "The": [2, 3, 4, 5, 6], "follow": 2, "mnist": 2, "consist": 2, "download": 2, "handwritten": 2, "digit": 2, "dataset": 2, "Then": 2, "creat": 2, "cd": 2, "mkdir": 2, "main": 2, "py": 2, "If": 2, "look": 2, "file": [2, 3, 5], "ll": 2, "notic": 2, "fetch": 2, "code": 2, "block": [2, 4], "file_exist": 2, "mnist_dataset_fil": 2, "print": 2, "found": 2, "get_mnist_dataset": 2, "nnp": [2, 3, 4, 5], "28": 2, "128": 2, "10": [2, 3, 5], "set": [2, 3], "paramet": [2, 3, 4, 5, 6], "01": [2, 3, 5], "format": 2, "store": 2, "object": [2, 5], "simplifi": 2, "prepar": 2, "f_x_train": 2, "normalize_img": 2, "x": 2, "x_train": 2, "trainingdata": [2, 5], "num_train": 2, "y_train": 2, "comput": 2, "accuraci": [2, 3], "serial": 2, "save": [2, 5], "binari": [2, 5], "bin": [2, 5], "saved_model": 2, "load": [2, 5], "new": 2, "instanc": 2, "again": 2, "simpli": 2, "showcas": 2, "test": 2, "test_data": 2, "must": 2, "built": 2, "cmake": 2, "order": [2, 5, 6], "us": [2, 3, 4, 5, 6], "insid": 2, "includ": 2, "modul": [2, 5], "path": 2, "system": 2, "import": [2, 4, 5], "sy": 2, "append": 2, "folder": 2, "can": [2, 3, 5], "ani": 2, "other": [2, 4], "neuralnetpi": [2, 3, 4, 5, 6], "befor": 2, "ar": [3, 4, 5, 6], "appli": 3, "given": [3, 5], "stage": 3, "procedur": 3, "thei": [3, 4, 5, 6], "get": [3, 5], "view": 3, "intern": 3, "state": 3, "statist": 3, "dure": [3, 5], "pass": [3, 5], "list": [3, 5], "each": [3, 4], "ha": [3, 4], "own": 3, "purpos": [3, 4], "make": [3, 5], "sure": 3, "read": 3, "document": 3, "carefulli": 3, "log": 3, "process": 3, "csv": 3, "100": 3, "an": [3, 4, 5], "stop": 3, "metric": 3, "doesn": 3, "t": 3, "improv": 3, "more": [3, 6], "than": 3, "delta": 3, "over": 3, "certain": 3, "number": [3, 4, 5], "epoch": [3, 5], "patienc": 3, "str": [3, 5], "monitor": 3, "either": 3, "default": [3, 4, 5, 6], "mindelta": 3, "float": [3, 5, 6], "minimum": 3, "consid": 3, "after": [3, 5], "individu": 4, "neuron": [4, 5], "connect": 4, "form": 4, "specif": 4, "backbon": 4, "nneuron": 4, "activationfunc": 4, "weightinit": 4, "bia": 4, "sole": 4, "vector": [4, 5], "matrix": [4, 5], "inputshap": 4, "tupl": 4, "shape": 4, "row": 4, "col": 4, "pixel": 4, "per": 4, "column": 4, "case": 4, "machin": 5, "learn": [5, 6], "decis": 5, "without": 5, "being": 5, "explicitli": 5, "program": 5, "so": 5, "static": 5, "arg0": 5, "arg1": 5, "neuralnet": 5, "usag": 5, "empti": 5, "popul": 5, "previous": 5, "content": 5, "overwritten": 5, "alreadi": 5, "exist": 5, "enum": 5, "mcq": 5, "add": 5, "ad": 5, "reflect": 5, "overal": 5, "structur": 5, "under": 5, "circumst": 5, "hidden": 5, "return": 5, "type": 5, "arg": 5, "kwarg": 5, "overload": 5, "numpi": 5, "ndarrai": 5, "float64": 5, "m": 5, "n": 5, "feed": 5, "forward": 5, "through": 5, "output": 5, "param": 5, "A": [5, 6], "repres": 5, "rtype": 5, "target": 5, "progbar": 5, "bool": 5, "true": 5, "dimension": 5, "whether": 5, "enabl": 5, "progress": 5, "bar": 5, "averag": 5, "throughout": 5, "4": 5, "5": 5, "67": 5, "matric": 5, "algorithm": 6, "attribut": 6, "rate": 6, "reduc": 6, "solv": 6, "problem": 6, "minim": 6, "For": 6, "inform": 6, "http": 6, "arxiv": 6, "org": 6, "ab": 6, "1412": 6, "6980": 6, "alpha": 6, "001": 6, "beta1": 6, "exponenti": 6, "decai": 6, "first": 6, "moment": 6, "estim": 6, "9": 6, "beta2": 6, "second": 6, "999": 6, "epsilon": 6, "small": 6, "constant": 6, "numer": 6, "stabil": 6, "10e": 6, "8": 6, "stochast": 6, "gradient": 6, "descent": 6, "en": 6, "wikipedia": 6, "wiki": 6, "stochastic_gradient_desc": 6}, "objects": {"": [[0, 0, 0, "-", "NeuralNetPy"]], "NeuralNetPy": [[0, 1, 1, "", "ACTIVATION"], [0, 1, 1, "", "LOSS"], [0, 1, 1, "", "TrainingData2dI"], [0, 1, 1, "", "TrainingData3dI"], [0, 1, 1, "", "WEIGHT_INIT"], [3, 0, 0, "-", "callbacks"], [4, 0, 0, "-", "layers"], [5, 0, 0, "-", "models"], [6, 0, 0, "-", "optimizers"]], "NeuralNetPy.ACTIVATION": [[0, 2, 1, "", "RELU"], [0, 2, 1, "", "SIGMOID"], [0, 2, 1, "", "SOFTMAX"], [0, 3, 1, "", "name"], [0, 3, 1, "", "value"]], "NeuralNetPy.LOSS": [[0, 2, 1, "", "MCE"], [0, 2, 1, "", "QUADRATIC"], [0, 3, 1, "", "name"], [0, 3, 1, "", "value"]], "NeuralNetPy.TrainingData2dI": [[0, 4, 1, "", "batch"]], "NeuralNetPy.TrainingData3dI": [[0, 4, 1, "", "batch"]], "NeuralNetPy.WEIGHT_INIT": [[0, 2, 1, "", "GLOROT"], [0, 2, 1, "", "HE"], [0, 2, 1, "", "LECUN"], [0, 2, 1, "", "RANDOM"], [0, 3, 1, "", "name"], [0, 3, 1, "", "value"]], "NeuralNetPy.callbacks": [[3, 1, 1, "", "CSVLogger"], [3, 1, 1, "", "Callback"], [3, 1, 1, "", "EarlyStopping"]], "NeuralNetPy.layers": [[4, 1, 1, "", "Dense"], [4, 1, 1, "", "Flatten"]], "NeuralNetPy.models": [[5, 1, 1, "", "Model"], [5, 1, 1, "", "Network"]], "NeuralNetPy.models.Model": [[5, 4, 1, "", "load_from_file"], [5, 4, 1, "", "save_to_file"]], "NeuralNetPy.models.Network": [[5, 4, 1, "", "addLayer"], [5, 4, 1, "", "getLayer"], [5, 4, 1, "", "getNumLayers"], [5, 4, 1, "", "predict"], [5, 4, 1, "", "setup"], [5, 4, 1, "", "train"]], "NeuralNetPy.optimizers": [[6, 1, 1, "", "Adam"], [6, 1, 1, "", "SGD"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"]}, "titleterms": {"neuralnetpi": [0, 1], "neural": 0, "network": 0, "librari": 0, "welcom": 1, "": 1, "document": 1, "content": 1, "indic": 1, "tabl": 1, "quick": 2, "start": 2, "instal": 2, "callback": 3, "layer": 4, "model": 5, "optim": 6}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"NeuralNetPy": [[0, "neuralnetpy"]], "Neural Network Library": [[0, "neural-network-library"]], "Welcome to NeuralNetPy\u2019s documentation!": [[1, "welcome-to-neuralnetpy-s-documentation"]], "Contents:": [[1, null]], "Indices and tables": [[1, "indices-and-tables"]], "Quick Start": [[2, "quick-start"]], "Installation": [[2, "installation"]], "Callbacks": [[3, "callbacks"]], "Layers": [[4, "layers"]], "Models": [[5, "models"]], "Optimizers": [[6, "optimizers"]]}, "indexentries": {"activation (class in neuralnetpy)": [[0, "NeuralNetPy.ACTIVATION"]], "glorot (neuralnetpy.weight_init attribute)": [[0, "NeuralNetPy.WEIGHT_INIT.GLOROT"]], "he (neuralnetpy.weight_init attribute)": [[0, "NeuralNetPy.WEIGHT_INIT.HE"]], "lecun (neuralnetpy.weight_init attribute)": [[0, "NeuralNetPy.WEIGHT_INIT.LECUN"]], "loss (class in neuralnetpy)": [[0, "NeuralNetPy.LOSS"]], "mce (neuralnetpy.loss attribute)": [[0, "NeuralNetPy.LOSS.MCE"]], "neuralnetpy": [[0, "module-NeuralNetPy"]], "quadratic (neuralnetpy.loss attribute)": [[0, "NeuralNetPy.LOSS.QUADRATIC"]], "random (neuralnetpy.weight_init attribute)": [[0, "NeuralNetPy.WEIGHT_INIT.RANDOM"]], "relu (neuralnetpy.activation attribute)": [[0, "NeuralNetPy.ACTIVATION.RELU"]], "sigmoid (neuralnetpy.activation attribute)": [[0, "NeuralNetPy.ACTIVATION.SIGMOID"]], "softmax (neuralnetpy.activation attribute)": [[0, "NeuralNetPy.ACTIVATION.SOFTMAX"]], "trainingdata2di (class in neuralnetpy)": [[0, "NeuralNetPy.TrainingData2dI"]], "trainingdata3di (class in neuralnetpy)": [[0, "NeuralNetPy.TrainingData3dI"]], "weight_init (class in neuralnetpy)": [[0, "NeuralNetPy.WEIGHT_INIT"]], "batch() (neuralnetpy.trainingdata2di method)": [[0, "NeuralNetPy.TrainingData2dI.batch"]], "batch() (neuralnetpy.trainingdata3di method)": [[0, "NeuralNetPy.TrainingData3dI.batch"]], "module": [[0, "module-NeuralNetPy"], [3, "module-NeuralNetPy.callbacks"], [4, "module-NeuralNetPy.layers"], [5, "module-NeuralNetPy.models"], [6, "module-NeuralNetPy.optimizers"]], "name (neuralnetpy.activation property)": [[0, "NeuralNetPy.ACTIVATION.name"]], "name (neuralnetpy.loss property)": [[0, "NeuralNetPy.LOSS.name"]], "name (neuralnetpy.weight_init property)": [[0, "NeuralNetPy.WEIGHT_INIT.name"]], "value (neuralnetpy.activation property)": [[0, "NeuralNetPy.ACTIVATION.value"]], "value (neuralnetpy.loss property)": [[0, "NeuralNetPy.LOSS.value"]], "value (neuralnetpy.weight_init property)": [[0, "NeuralNetPy.WEIGHT_INIT.value"]], "csvlogger (class in neuralnetpy.callbacks)": [[3, "NeuralNetPy.callbacks.CSVLogger"]], "callback (class in neuralnetpy.callbacks)": [[3, "NeuralNetPy.callbacks.Callback"]], "earlystopping (class in neuralnetpy.callbacks)": [[3, "NeuralNetPy.callbacks.EarlyStopping"]], "neuralnetpy.callbacks": [[3, "module-NeuralNetPy.callbacks"]], "dense (class in neuralnetpy.layers)": [[4, "NeuralNetPy.layers.Dense"]], "flatten (class in neuralnetpy.layers)": [[4, "NeuralNetPy.layers.Flatten"]], "neuralnetpy.layers": [[4, "module-NeuralNetPy.layers"]], "model (class in neuralnetpy.models)": [[5, "NeuralNetPy.models.Model"]], "network (class in neuralnetpy.models)": [[5, "NeuralNetPy.models.Network"]], "neuralnetpy.models": [[5, "module-NeuralNetPy.models"]], "addlayer() (neuralnetpy.models.network method)": [[5, "NeuralNetPy.models.Network.addLayer"]], "getlayer() (neuralnetpy.models.network method)": [[5, "NeuralNetPy.models.Network.getLayer"]], "getnumlayers() (neuralnetpy.models.network method)": [[5, "NeuralNetPy.models.Network.getNumLayers"]], "load_from_file() (neuralnetpy.models.model static method)": [[5, "NeuralNetPy.models.Model.load_from_file"]], "predict() (neuralnetpy.models.network method)": [[5, "NeuralNetPy.models.Network.predict"]], "save_to_file() (neuralnetpy.models.model static method)": [[5, "NeuralNetPy.models.Model.save_to_file"]], "setup() (neuralnetpy.models.network method)": [[5, "NeuralNetPy.models.Network.setup"]], "train() (neuralnetpy.models.network method)": [[5, "NeuralNetPy.models.Network.train"]], "adam (class in neuralnetpy.optimizers)": [[6, "NeuralNetPy.optimizers.Adam"]], "neuralnetpy.optimizers": [[6, "module-NeuralNetPy.optimizers"]], "sgd (class in neuralnetpy.optimizers)": [[6, "NeuralNetPy.optimizers.SGD"]]}})